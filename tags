!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Autoencoder	autoencoder.py	/^class Autoencoder(nn.Module):$/;"	c
MNISTModel	autoencoder.py	/^class MNISTModel():$/;"	c
__init__	autoencoder.py	/^    def __init__(self, input_size, latent_size):$/;"	m	class:Autoencoder
__init__	autoencoder.py	/^    def __init__(self, latent_dim=256, batch_size=1000):$/;"	m	class:MNISTModel
forward	autoencoder.py	/^    def forward(self, x):$/;"	m	class:Autoencoder
model	autoencoder.py	/^    model = MNISTModel()$/;"	v	class:MNISTModel
nn	autoencoder.py	/^import torch.nn as nn$/;"	i
optim	autoencoder.py	/^import torch.optim as optim$/;"	i
torch	autoencoder.py	/^import torch$/;"	i
torch	autoencoder.py	/^import torch.nn as nn$/;"	i
torch	autoencoder.py	/^import torch.optim as optim$/;"	i
torchvision	autoencoder.py	/^import torchvision$/;"	i
torchvision	autoencoder.py	/^import torchvision.transforms as transforms$/;"	i
tqdm	autoencoder.py	/^from tqdm.autonotebook import tqdm$/;"	i
train	autoencoder.py	/^    def train(self, lr=0.001, num_epochs=10):$/;"	m	class:MNISTModel
transforms	autoencoder.py	/^import torchvision.transforms as transforms$/;"	i
